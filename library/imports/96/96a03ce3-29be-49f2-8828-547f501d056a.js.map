{"version":3,"sources":["assets\\scripts\\Game.js"],"names":["cc","Class","Component","properties","starPrefab","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","onLoad","groundY","y","height","timer","starDuration","spawnNewStar","score","gainScore","string","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","Math","random","randX","randY","jumpHeight","maxX","width","v2","start","update","dt","gameOver","stopAllActions","director","loadScene"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // This property quotes the PreFab resource of stars\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n\r\n        // The random scale of disappearing time for stars\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n\r\n        // Ground node for confirming the height of the generated star's position\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        // Player node for obtaining the jump height of the main character and controlling the movement switch of the main character\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // Reference of score label\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad: function () {\r\n        // Obtain the anchor point of ground level on the y axis\r\n        this.groundY = this.ground.y + this.ground.height / 2; // \"this.ground.top\" may also work\r\n\r\n        // Initialize timer\r\n        this.timer = 0;\r\n        this.starDuration = 0;\r\n\r\n        // Generate a new star\r\n        this.spawnNewStar();\r\n        this.score = 0;\r\n\r\n    },\r\n    gainScore: function () {\r\n        this.score += 1;\r\n        // Update the words of the scoreDisplay Label\r\n        this.scoreDisplay.string = 'Score: ' + this.score;\r\n    },\r\n\r\n\r\n    spawnNewStar: function () {\r\n        // Generate a new node in the scene with a preset template\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // Put the newly added node under the Canvas node\r\n        this.node.addChild(newStar);\r\n        // Set up a random position for the star\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        newStar.getComponent('Star').game = this;\r\n\r\n        // Reset timer, randomly choose a value according the scale of star duration\r\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // According to the position of the ground level and the main character's jump height, randomly obtain an anchor point of the star on the y axis\r\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // According to the width of the screen, randomly obtain an anchor point of star on the x axis\r\n        var maxX = this.node.width / 2;\r\n        randX = (Math.random() - 0.5) * 2 * maxX;\r\n        // Return to the anchor point of the star\r\n        return cc.v2(randX, randY);\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    update: function (dt) {\r\n        // Update timer for each frame, when a new star is not generated after exceeding duration\r\n\r\n        // Invoke the logic of game failure\r\n        if (this.timer > this.starDuration) {\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n    gameOver: function () {\r\n        // Stop the jumping action of the Player node\r\n        this.player.stopAllActions();\r\n        // reload the \"game\" scene\r\n        cc.director.loadScene('game');\r\n    }\r\n});\r\n"]}